
version: "3.8"

services:
  # ============================
  # MySQL Database Service
  # ============================
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: ecommerce
    ports:
      - "4001:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-db:/docker-entrypoint-initdb.d:ro
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # ============================
  # Backend API Service
  # ============================
  api:
    container_name: api
    build:
      context: ./IP2-Backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "4002:3001"
    environment:
      PORT: 3001
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: mysql://root:${MYSQL_ROOT_PASSWORD:-123456}@mysql:3306/ecommerce
      JWT_SECRET: ${JWT_SECRET:-65c2024527309d60da0b53a353ecaed2794b2a840694f711a40e389347e37ae6}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-15m}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      APP_URL: http://api:3001
      FRONTEND_URL: http://web:3000
      MAIL_HOST: ${MAIL_HOST:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-465}
      MAIL_USER: ${MAIL_USER:-haikimsreng28@gmail.com}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-opyh wmha gqxc pzpt}
      MAIL_FROM: ${MAIL_FROM:-Admin}
      MAIL_SECURE: ${MAIL_SECURE:-true}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-512931940241-lda424imanoc3p7eh6nfn7qpctlei5om.apps.googleusercontent.com}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-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}
      GOOGLE_CALLBACK_URL: http://api:3001/api/account/auth/google/redirect
      FILE_BASE_URL: http://file-service:8080
    volumes:
      - ./IP2-Backend/src:/myapp/src:ro
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: >
      sh -c "npx prisma migrate deploy && node dist/main"

  # ============================
  # Frontend Web Service
  # ============================
  web:
    container_name: web
    build:
      context: ./IP2-Frontend
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://api:3001/api
        FILE_BASE_URL: http://file-service:8080/api/file/
        RESEND_API_KEY: 6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI
        RecaptchaSiteKey: ${RECAPTCHA_SITE_KEY:-6LeIxAcTAAAAAJcZVRqyHh71UMIEGNQ_MXjiZKhI}
    restart: unless-stopped
    ports:
      - "4003:80"
    depends_on:
      - api
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # ============================
  # File Service (Go App)
  # ============================
  file-service:
    container_name: file-service
    build:
      context: ./File-Service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "4004:8080"
    environment:
      PORT: 8080
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      DB_DATABASE: file
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ecommerce
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

# ============================
# Networks and Volumes
# ============================
networks:
  ecommerce:
    driver: bridge

volumes:
  mysql-data:
    driver: local